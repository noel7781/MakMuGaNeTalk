plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id "com.github.node-gradle.node" version '3.5.0'
}

group = 'com.mugane'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2020.0.4")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    runtimeOnly 'mysql:mysql-connector-java'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    annotationProcessor 'javax.persistence:javax.persistence-api'
    annotationProcessor 'javax.annotation:javax.annotation-api'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jpa'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-test'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    runtimeOnly 'com.h2database:h2:1.4.199'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-reactor-netty:2.7.4'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    implementation 'org.springdoc:springdoc-openapi-ui:1.6.13'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

node {
    version = '16.14.0'
    download = true
    npmWorkDir = file("${project.projectDir}/.gradle/npm")
    nodeProjectDir = file("${project.projectDir}/frontend")
}

// npm install
task appNpmInstall(type: NpmTask) {
    workingDir = file("${project.projectDir}/frontend")
    args = ["install"]
}

// npm build
task npmBuild(type: NpmTask) {
    workingDir = file("${project.projectDir}/frontend")
    args = ["run", "build"]
}

// 빌드된 결과 이동
task copyWebApp(type: Copy) {
    from "frontend/dist"
    into 'build/resources/main/static/'
}

npmBuild.dependsOn appNpmInstall
copyWebApp.dependsOn npmBuild
compileJava.dependsOn copyWebApp
